function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React, { PureComponent } from 'react';
import { NativeModules, Platform, DeviceEventEmitter, StyleSheet } from 'react-native';
import { RNGoogleSigninButton } from './RNGoogleSiginButton';
const RNGoogleSignin = NativeModules.RNGoogleSignin;
export class GoogleSigninButton extends PureComponent {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "_clickListener", void 0);
  }

  componentDidMount() {
    if (Platform.OS === 'android') {
      this._clickListener = DeviceEventEmitter.addListener('RNGoogleSigninButtonClicked', () => {
        this.props.onPress && this.props.onPress();
      });
    }
  }

  componentWillUnmount() {
    this._clickListener && this._clickListener.remove();
  }

  getRecommendedSize() {
    switch (this.props.size) {
      case RNGoogleSignin.BUTTON_SIZE_ICON:
        return styles.iconSize;

      case RNGoogleSignin.BUTTON_SIZE_WIDE:
        return styles.wideSize;

      default:
        return styles.standardSize;
    }
  }

  render() {
    const {
      style,
      ...props
    } = this.props; // @ts-ignore style prop incompatible

    return /*#__PURE__*/React.createElement(RNGoogleSigninButton, _extends({}, props, {
      style: [this.getRecommendedSize(), style]
    }));
  }

} // sizes according to https://developers.google.com/identity/sign-in/ios/reference/Classes/GIDSignInButton

_defineProperty(GoogleSigninButton, "Size", {
  Icon: RNGoogleSignin.BUTTON_SIZE_ICON,
  Standard: RNGoogleSignin.BUTTON_SIZE_STANDARD,
  Wide: RNGoogleSignin.BUTTON_SIZE_WIDE
});

_defineProperty(GoogleSigninButton, "Color", {
  Dark: RNGoogleSignin.BUTTON_COLOR_DARK,
  Light: RNGoogleSignin.BUTTON_COLOR_LIGHT
});

_defineProperty(GoogleSigninButton, "defaultProps", {
  size: RNGoogleSignin.BUTTON_SIZE_STANDARD
});

const styles = StyleSheet.create({
  iconSize: {
    width: 48,
    height: 48
  },
  standardSize: {
    width: 230,
    height: 48
  },
  wideSize: {
    width: 312,
    height: 48
  }
});
//# sourceMappingURL=GoogleSigninButton.js.map