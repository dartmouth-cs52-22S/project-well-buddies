{"version":3,"sources":["GoogleSigninButton.tsx"],"names":["RNGoogleSignin","NativeModules","GoogleSigninButton","PureComponent","componentDidMount","Platform","OS","_clickListener","DeviceEventEmitter","addListener","props","onPress","componentWillUnmount","remove","getRecommendedSize","size","BUTTON_SIZE_ICON","styles","iconSize","BUTTON_SIZE_WIDE","wideSize","standardSize","render","style","Icon","Standard","BUTTON_SIZE_STANDARD","Wide","Dark","BUTTON_COLOR_DARK","Light","BUTTON_COLOR_LIGHT","StyleSheet","create","width","height"],"mappings":";;;;;;;AAAA;;AAEA;;AAUA;;;;;;;;;;AAGA,MAAMA,cAAgC,GAAGC,2BAAcD,cAAvD;;AAUO,MAAME,kBAAN,SAAiCC,oBAAjC,CAAwE;AAAA;AAAA;;AAAA;AAAA;;AAkB7EC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,sBAASC,EAAT,KAAgB,SAApB,EAA+B;AAC7B,WAAKC,cAAL,GAAsBC,gCAAmBC,WAAnB,CAA+B,6BAA/B,EAA8D,MAAM;AACxF,aAAKC,KAAL,CAAWC,OAAX,IAAsB,KAAKD,KAAL,CAAWC,OAAX,EAAtB;AACD,OAFqB,CAAtB;AAGD;AACF;;AAEDC,EAAAA,oBAAoB,GAAG;AACrB,SAAKL,cAAL,IAAuB,KAAKA,cAAL,CAAoBM,MAApB,EAAvB;AACD;;AAEDC,EAAAA,kBAAkB,GAAG;AACnB,YAAQ,KAAKJ,KAAL,CAAWK,IAAnB;AACE,WAAKf,cAAc,CAACgB,gBAApB;AACE,eAAOC,MAAM,CAACC,QAAd;;AACF,WAAKlB,cAAc,CAACmB,gBAApB;AACE,eAAOF,MAAM,CAACG,QAAd;;AACF;AACE,eAAOH,MAAM,CAACI,YAAd;AANJ;AAQD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAAS,SAAGb;AAAZ,QAAsB,KAAKA,KAAjC,CADO,CAGP;;AACA,wBAAO,6BAAC,yCAAD,eAA0BA,KAA1B;AAAiC,MAAA,KAAK,EAAE,CAAC,KAAKI,kBAAL,EAAD,EAA4BS,KAA5B;AAAxC,OAAP;AACD;;AA9C4E,C,CAiD/E;;;;;gBAjDarB,kB,UAGG;AACZsB,EAAAA,IAAI,EAAExB,cAAc,CAACgB,gBADT;AAEZS,EAAAA,QAAQ,EAAEzB,cAAc,CAAC0B,oBAFb;AAGZC,EAAAA,IAAI,EAAE3B,cAAc,CAACmB;AAHT,C;;gBAHHjB,kB,WASI;AACb0B,EAAAA,IAAI,EAAE5B,cAAc,CAAC6B,iBADR;AAEbC,EAAAA,KAAK,EAAE9B,cAAc,CAAC+B;AAFT,C;;gBATJ7B,kB,kBAcW;AACpBa,EAAAA,IAAI,EAAEf,cAAc,CAAC0B;AADD,C;;AAoCxB,MAAMT,MAAM,GAAGe,wBAAWC,MAAX,CAAkB;AAC/Bf,EAAAA,QAAQ,EAAE;AACRgB,IAAAA,KAAK,EAAE,EADC;AAERC,IAAAA,MAAM,EAAE;AAFA,GADqB;AAK/Bd,EAAAA,YAAY,EAAE;AAAEa,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,MAAM,EAAE;AAAtB,GALiB;AAM/Bf,EAAAA,QAAQ,EAAE;AAAEc,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,MAAM,EAAE;AAAtB;AANqB,CAAlB,CAAf","sourcesContent":["import React, { PureComponent } from 'react';\n\nimport {\n  NativeModules,\n  Platform,\n  DeviceEventEmitter,\n  StyleSheet,\n  EmitterSubscription,\n  ViewProps,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\nimport { RNGoogleSigninButton } from './RNGoogleSiginButton';\nimport type { RNGoogleSignType } from './types';\n\nconst RNGoogleSignin: RNGoogleSignType = NativeModules.RNGoogleSignin;\n\nexport interface GoogleSigninButtonProps extends ViewProps {\n  style?: StyleProp<ViewStyle>;\n  size?: 0 | 1 | 2;\n  color?: 0 | 1;\n  disabled?: boolean;\n  onPress?(): void;\n}\n\nexport class GoogleSigninButton extends PureComponent<GoogleSigninButtonProps> {\n  _clickListener?: EmitterSubscription;\n\n  static Size = {\n    Icon: RNGoogleSignin.BUTTON_SIZE_ICON,\n    Standard: RNGoogleSignin.BUTTON_SIZE_STANDARD,\n    Wide: RNGoogleSignin.BUTTON_SIZE_WIDE,\n  };\n\n  static Color = {\n    Dark: RNGoogleSignin.BUTTON_COLOR_DARK,\n    Light: RNGoogleSignin.BUTTON_COLOR_LIGHT,\n  };\n\n  static defaultProps = {\n    size: RNGoogleSignin.BUTTON_SIZE_STANDARD,\n  };\n\n  componentDidMount() {\n    if (Platform.OS === 'android') {\n      this._clickListener = DeviceEventEmitter.addListener('RNGoogleSigninButtonClicked', () => {\n        this.props.onPress && this.props.onPress();\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this._clickListener && this._clickListener.remove();\n  }\n\n  getRecommendedSize() {\n    switch (this.props.size) {\n      case RNGoogleSignin.BUTTON_SIZE_ICON:\n        return styles.iconSize;\n      case RNGoogleSignin.BUTTON_SIZE_WIDE:\n        return styles.wideSize;\n      default:\n        return styles.standardSize;\n    }\n  }\n\n  render() {\n    const { style, ...props } = this.props;\n\n    // @ts-ignore style prop incompatible\n    return <RNGoogleSigninButton {...props} style={[this.getRecommendedSize(), style]} />;\n  }\n}\n\n// sizes according to https://developers.google.com/identity/sign-in/ios/reference/Classes/GIDSignInButton\nconst styles = StyleSheet.create({\n  iconSize: {\n    width: 48,\n    height: 48,\n  },\n  standardSize: { width: 230, height: 48 },\n  wideSize: { width: 312, height: 48 },\n});\n"]}